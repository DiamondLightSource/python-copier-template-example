[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "dls-python-copier-template-example"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
description = "An expanded https://github.com/DiamondLightSource/python-copier-template to illustrate how it looks with all the options enabled."
dependencies = [] # Add project dependencies here, e.g. ["click", "numpy"]
dynamic = ["version"]
license.file = "LICENSE"
readme = "README.md"
requires-python = ">=3.11"

[dependency-groups]
dev = [
    "copier",
    "myst-parser",
    "pre-commit",
    "pydata-sphinx-theme>=0.12",
    "pyright",
    "pytest",
    "pytest-cov",
    "ruff",
    "sphinx-autobuild",
    "sphinx-copybutton",
    "sphinx-design",
    "tox-uv",
    "types-mock",
]

[project.scripts]
python-copier-template-example = "python_copier_template_example.__main__:main"

[project.urls]
GitHub = "https://github.com/DiamondLightSource/python-copier-template-example"

[[project.authors]] # Further authors may be added by duplicating this section
email = "tom.cobb@diamond.ac.uk"
name = "Tom Cobb"

[tool.setuptools_scm]
version_file = "src/python_copier_template_example/_version.py"

[tool.pyright]
typeCheckingMode = "strict"
reportMissingImports = false # Ignore missing stubs in imported modules

[tool.pytest.ini_options]
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts = """
    --tb=native -vv --doctest-modules --doctest-glob="*.rst"
    """
# https://iscinumpy.gitlab.io/post/bound-version-constraints/#watch-for-warnings
filterwarnings = "error"
# Doctest python code in docs, python code in src docstrings, test functions in tests
testpaths = "docs src tests"

[tool.coverage.run]
patch = ["subprocess"]
data_file = "/tmp/python_copier_template_example.coverage"

[tool.coverage.paths]
# Tests are run from installed location, map back to the src directory
source = ["src", "**/site-packages/"]

[tool.tox]
skipsdist = true
# envs to runs automatically with tox -p
env_list = ["pre-commit", "type-checking", "tests", "docs"]

[tool.tox.env_run_base]
# Pass all environment variables to the test environments
passenv = ["*"]

[tool.tox.env.pre-commit]
description = "Run pre-commit on all files"
commands = [
    [
        "pre-commit",
        "run",
        "--all-files",
        "--show-diff-on-failure",
        { replace = "posargs", default = [
        ], extend = true },
    ],
]

[tool.tox.env.type-checking]
description = "Run pyright"
commands = [
    [
        "pyright",
        "src",
        "tests",
        { replace = "posargs", default = [
        ], extend = true },
    ],
]

[tool.tox.env.tests]
description = "Run tests with coverage"
commands = [
    [
        "pytest", 
        "--cov=python_copier_template_example",
        "--cov-report",
        "term",
        "--cov-report",
        "xml:cov.xml",
        { replace = "posargs", default = [
        ], extend = true },
    ],
]

[tool.tox.env.docs]
description = "Run docs build with clean environment"
commands = [
    [
        "sphinx-build",
        "--fresh-env",
        "--show-traceback",
        "--fail-on-warning",
        "--keep-going",
        "docs",
        "build/html",
        { replace = "posargs", default = [
        ], extend = true },
    ],
]

[tool.tox.env.docs-autobuild]
description = "Run docs with autobuild on change"
commands = [
    [
        "sphinx-autobuild",
        "--show-traceback",
        "--watch",
        "README.md",
        "docs",
        "build/html",
        { replace = "posargs", default = [
        ], extend = true },
    ],
]

[tool.ruff]
src = ["src", "tests"]
line-length = 88
lint.select = [
    "B",   # flake8-bugbear - https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4",  # flake8-comprehensions - https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "E",   # pycodestyle errors - https://docs.astral.sh/ruff/rules/#error-e
    "F",   # pyflakes rules - https://docs.astral.sh/ruff/rules/#pyflakes-f
    "N",   # pep8-naming - https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "W",   # pycodestyle warnings - https://docs.astral.sh/ruff/rules/#warning-w
    "I",   # isort - https://docs.astral.sh/ruff/rules/#isort-i
    "UP",  # pyupgrade - https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "SLF", # self - https://docs.astral.sh/ruff/settings/#lintflake8-self
]

[tool.ruff.lint.per-file-ignores]
# By default, private member access is allowed in tests
# See https://github.com/DiamondLightSource/python-copier-template/issues/154
# Remove this line to forbid private member access in tests
"tests/**/*" = ["SLF001"]
